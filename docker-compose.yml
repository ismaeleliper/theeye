version: "3.9"

services:
  db:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  web:
    build: .
    command: python3 manage.py runserver 0.0.0.0:18000
    volumes:
      - .:/code
    ports:
      - "8000:8000"
      - "18000:18000"
    depends_on:
      - db
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
        - "5672:5672"
        - "15672:15672"
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
        - rabbitmq_go_net
  redis:
    image: redis
    ports:
      - "6379:6379"
      - "16379:16379"
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    image: madefire/chordtest
    command: [ 'celery', 'worker', '-A', 'app.app', '-l', 'info' ]
    environment:
      - BROKER_URL=amqp://guest:guest@rabbitmq:15672//
      - RESULT_BACKEND=redis://redis:16379/0
      - C_FORCE_ROOT=true
    volumes:
      - ./:/app/
    depends_on:
      - rabbitmq
      - redis

networks:
  rabbitmq_go_net:
    driver: bridge